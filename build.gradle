plugins {
    id 'io.jmix' version '1.5.3'
    id 'java'
    id 'com.palantir.docker' version '0.30.0'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.5.3'
    projectId = 'pm'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.ui:jmix-ui-test-assist'
    implementation 'org.postgresql:postgresql'

    implementation 'io.jmix.translations:jmix-translations-fr'

    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config:3.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'com.hazelcast:hazelcast'
    implementation 'com.hazelcast:hazelcast-kubernetes:2.2.3'

    implementation "org.springframework.boot:spring-boot-starter-undertow"
    modules {
        module("org.springframework.boot:spring-boot-starter-tomcat") {
            replacedBy("org.springframework.boot:spring-boot-starter-undertow", "Use Undertow instead of Apache Tomcat")
        }
    }
}

docker {
    dependsOn(tasks.bootJar)
    name "$rootProject.name:$version"
    dockerfile file('docker/Dockerfile.layered')
    files tasks.bootJar.outputs
}

bootBuildImage {
    imageName = "jmix_pm_boot_image"
}

test {
    useJUnitPlatform()
}
